name: Docker Image CI

on:
  push:
    branches: [ "main" ]


# permissions:
#         id-token: write   # This is required for requesting the JWT
#         contents: read 
jobs:
        BuildAndPushImageToECR:
          name: "Build and Push to ECR"
          runs-on: ubuntu-latest

          steps:
            # - name: Git clone the repository
            #   uses: actions/checkout@v4
            # - name: configure aws credentials
            #   uses: aws-actions/configure-aws-credentials@v4
            #   with:
            #     role-to-assume: arn:aws:iam::486731791479:role/github-action-role #change to reflect your IAM role‚Äôs ARN
            #     role-session-name: github-action-role 
            #     aws-region: ${{ env.AWS_REGION }}
            # # Hello from AWS: WhoAmI
            # - name: Sts GetCallerIdentity
            #   run: |
            #     aws sts get-caller-identity

            # - name: Configure AWS Credentials
            #   uses: aws-actions/configure-aws-credentials@v4
            #   with:
            #     aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
            #     aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
            #     aws-region: us-east-1 
      
            # - name: Login to Amazon ECR
            #   id: login-ecr
            #   uses: aws-actions/amazon-ecr-login@v1
      
            # - name: Build, tag, and push image to Amazon ECR üè∑
            #   id: build-image
            #   env:
            #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            #     ECR_REPOSITORY: "private-ecr"
            #     IMAGE_TAG: v1

            - uses: actions/checkout@v4
            - name: Build the Docker image
              run: docker build . --file Dockerfile --tag my-image-name:$(date +%s) 
                # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                # echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

#   pull_request:
#     branches: [ "master" ]

# jobs:

#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v4
#     - name: Build the Docker image
#       run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

      
      